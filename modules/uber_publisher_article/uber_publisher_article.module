<?php

/**
 * @file
 */

use Drupal\entityqueue\Entity\EntitySubqueue;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_insert().
 */
function uber_publisher_article_taxonomy_term_insert($term) {
  if ($term->bundle() == 'section') {
    $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
    if (\Drupal::languageManager()->getCurrentLanguage()->getId() != 'en') {
      $trans = \Drupal::transliteration();
      $term_name = $trans->transliterate($term->getName(), $langcode);
    }
    else {
      $term_name = $term->getName();
    }

    $subqueue = EntitySubqueue::create([
      'name' => preg_replace('@[^a-z0-9-]+@', '-', strtolower($term_name)),
      'title' => $term->getName(),
      'queue' => 'promoted_splash_area_sections',
    ]);
    $subqueue->save();
  }
}

/**
 * Implements hook_form_alter().
 */
function uber_publisher_article_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  if (strpos($form_id, 'node') !== FALSE) {

    $form['#attached']['library'][] = 'uber_publisher_article/style_admin';
  }
}

/**
 * Implements hook_theme().
 */
function uber_publisher_article_theme($existing, $type, $theme, $path) {
  return [
    'paragraphs-actions' => ['base hook' => 'paragraphs_actions'],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function uber_publisher_article_theme_suggestions_paragraphs_actions(array $variables) {
  $suggestions[] = 'paragraphs-actions';
  return $suggestions;
}
